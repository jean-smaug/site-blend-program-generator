// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Smoothie component should render Smoothie Component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="smoothie"
>
    <ToastContainer
        className="toast-bottom-full-width"
        id="toast-container"
        newestOnTop={true}
        onClick={[Function]}
        preventDuplicates={true}
        toastMessageFactory={[Function]}
        toastType={
            Object {
                "error": "error",
                "info": "info",
                "success": "success",
                "warning": "warning",
              }
        }
    />
    <div
        className="outils columns"
    >
        <div
            className="column"
        >
            <a
                aria-pressed="true"
                onClick={[Function]}
                role="button"
                tabIndex="0"
            >
                <i
                    className="fa fa-info"
                />
            </a>
            <a
                aria-pressed="true"
                onClick={[Function]}
                role="button"
                tabIndex="0"
            >
                Remix
            </a>
        </div>
    </div>
    <div
        id="citron"
    >
        <img
            alt="lemon"
            src="https://img11.hostingpics.net/pics/267927citron.png"
        />
    </div>
    <div
        id="paille"
    >
        <img
            alt="straw"
            src="https://img11.hostingpics.net/pics/673317paille.png"
        />
    </div>
    <div
        className="columns"
    >
        <div
            className="column is-4 is-offset-4 itemsSmoothie"
        >
            <div
                className="header-date"
            >
                <h1>
                    Jour 1
                </h1>
                <h3>
                    Jeudi 26 octobre
                </h3>
            </div>
            <ListConference
                day={Object {}}
                number="one"
            />
        </div>
        <div
            className="column is-one-quarter"
        />
    </div>
    <div
        className="columns"
    >
        <div
            className="column is-4 is-offset-4 itemsSmoothie"
        >
            <div
                className="header-date"
            >
                <h1>
                    Jour 2
                </h1>
                <h3>
                    Vendredi 27 octobre
                </h3>
            </div>
            <ListConference
                day={Object {}}
                number="two"
            />
        </div>
        <div
            className="column is-one-quarter"
        />
    </div>
</div>,
  "nodes": Array [
    <div
      className="smoothie"
>
      <ToastContainer
            className="toast-bottom-full-width"
            id="toast-container"
            newestOnTop={true}
            onClick={[Function]}
            preventDuplicates={true}
            toastMessageFactory={[Function]}
            toastType={
                  Object {
                        "error": "error",
                        "info": "info",
                        "success": "success",
                        "warning": "warning",
                      }
            }
      />
      <div
            className="outils columns"
      >
            <div
                  className="column"
            >
                  <a
                        aria-pressed="true"
                        onClick={[Function]}
                        role="button"
                        tabIndex="0"
                  >
                        <i
                              className="fa fa-info"
                        />
                  </a>
                  <a
                        aria-pressed="true"
                        onClick={[Function]}
                        role="button"
                        tabIndex="0"
                  >
                        Remix
                  </a>
            </div>
      </div>
      <div
            id="citron"
      >
            <img
                  alt="lemon"
                  src="https://img11.hostingpics.net/pics/267927citron.png"
            />
      </div>
      <div
            id="paille"
      >
            <img
                  alt="straw"
                  src="https://img11.hostingpics.net/pics/673317paille.png"
            />
      </div>
      <div
            className="columns"
      >
            <div
                  className="column is-4 is-offset-4 itemsSmoothie"
            >
                  <div
                        className="header-date"
                  >
                        <h1>
                              Jour 1
                        </h1>
                        <h3>
                              Jeudi 26 octobre
                        </h3>
                  </div>
                  <ListConference
                        day={Object {}}
                        number="one"
                  />
            </div>
            <div
                  className="column is-one-quarter"
            />
      </div>
      <div
            className="columns"
      >
            <div
                  className="column is-4 is-offset-4 itemsSmoothie"
            >
                  <div
                        className="header-date"
                  >
                        <h1>
                              Jour 2
                        </h1>
                        <h3>
                              Vendredi 27 octobre
                        </h3>
                  </div>
                  <ListConference
                        day={Object {}}
                        number="two"
                  />
            </div>
            <div
                  className="column is-one-quarter"
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SmoothieComponent
        dayOne={Object {}}
        dayTwo={Object {}}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SmoothieComponent {
        "_reactInternalInstance": [Circular],
        "componentDidMount": [Function],
        "context": Object {},
        "handleClickSave": [Function],
        "props": Object {
          "dayOne": Object {},
          "dayTwo": Object {},
        },
        "refs": Object {},
        "remix": [Function],
        "state": Object {
          "isModalVisible": false,
        },
        "toggleModal": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="smoothie"
>
          <ToastContainer
                    className="toast-bottom-full-width"
                    id="toast-container"
                    newestOnTop={true}
                    onClick={[Function]}
                    preventDuplicates={true}
                    toastMessageFactory={[Function]}
                    toastType={
                              Object {
                                        "error": "error",
                                        "info": "info",
                                        "success": "success",
                                        "warning": "warning",
                                      }
                    }
          />
          <div
                    className="outils columns"
          >
                    <div
                              className="column"
                    >
                              <a
                                        aria-pressed="true"
                                        onClick={[Function]}
                                        role="button"
                                        tabIndex="0"
                              >
                                        <i
                                                  className="fa fa-info"
                                        />
                              </a>
                              <a
                                        aria-pressed="true"
                                        onClick={[Function]}
                                        role="button"
                                        tabIndex="0"
                              >
                                        Remix
                              </a>
                    </div>
          </div>
          <div
                    id="citron"
          >
                    <img
                              alt="lemon"
                              src="https://img11.hostingpics.net/pics/267927citron.png"
                    />
          </div>
          <div
                    id="paille"
          >
                    <img
                              alt="straw"
                              src="https://img11.hostingpics.net/pics/673317paille.png"
                    />
          </div>
          <div
                    className="columns"
          >
                    <div
                              className="column is-4 is-offset-4 itemsSmoothie"
                    >
                              <div
                                        className="header-date"
                              >
                                        <h1>
                                                  Jour 1
                                        </h1>
                                        <h3>
                                                  Jeudi 26 octobre
                                        </h3>
                              </div>
                              <ListConference
                                        day={Object {}}
                                        number="one"
                              />
                    </div>
                    <div
                              className="column is-one-quarter"
                    />
          </div>
          <div
                    className="columns"
          >
                    <div
                              className="column is-4 is-offset-4 itemsSmoothie"
                    >
                              <div
                                        className="header-date"
                              >
                                        <h1>
                                                  Jour 2
                                        </h1>
                                        <h3>
                                                  Vendredi 27 octobre
                                        </h3>
                              </div>
                              <ListConference
                                        day={Object {}}
                                        number="two"
                              />
                    </div>
                    <div
                              className="column is-one-quarter"
                    />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="smoothie"
>
          <ToastContainer
                    className="toast-bottom-full-width"
                    id="toast-container"
                    newestOnTop={true}
                    onClick={[Function]}
                    preventDuplicates={true}
                    toastMessageFactory={[Function]}
                    toastType={
                              Object {
                                        "error": "error",
                                        "info": "info",
                                        "success": "success",
                                        "warning": "warning",
                                      }
                    }
          />
          <div
                    className="outils columns"
          >
                    <div
                              className="column"
                    >
                              <a
                                        aria-pressed="true"
                                        onClick={[Function]}
                                        role="button"
                                        tabIndex="0"
                              >
                                        <i
                                                  className="fa fa-info"
                                        />
                              </a>
                              <a
                                        aria-pressed="true"
                                        onClick={[Function]}
                                        role="button"
                                        tabIndex="0"
                              >
                                        Remix
                              </a>
                    </div>
          </div>
          <div
                    id="citron"
          >
                    <img
                              alt="lemon"
                              src="https://img11.hostingpics.net/pics/267927citron.png"
                    />
          </div>
          <div
                    id="paille"
          >
                    <img
                              alt="straw"
                              src="https://img11.hostingpics.net/pics/673317paille.png"
                    />
          </div>
          <div
                    className="columns"
          >
                    <div
                              className="column is-4 is-offset-4 itemsSmoothie"
                    >
                              <div
                                        className="header-date"
                              >
                                        <h1>
                                                  Jour 1
                                        </h1>
                                        <h3>
                                                  Jeudi 26 octobre
                                        </h3>
                              </div>
                              <ListConference
                                        day={Object {}}
                                        number="one"
                              />
                    </div>
                    <div
                              className="column is-one-quarter"
                    />
          </div>
          <div
                    className="columns"
          >
                    <div
                              className="column is-4 is-offset-4 itemsSmoothie"
                    >
                              <div
                                        className="header-date"
                              >
                                        <h1>
                                                  Jour 2
                                        </h1>
                                        <h3>
                                                  Vendredi 27 octobre
                                        </h3>
                              </div>
                              <ListConference
                                        day={Object {}}
                                        number="two"
                              />
                    </div>
                    <div
                              className="column is-one-quarter"
                    />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SmoothieComponent
    dayOne={Object {}}
    dayTwo={Object {}}
/>,
}
`;
